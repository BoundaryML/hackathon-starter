###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum

from pydantic import BaseModel, ConfigDict

from typing_extensions import TypeAlias, Literal
from typing import Dict, Generic, List, Optional, TypeVar, Union

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class ComputeValue(BaseModel):
    type: Optional[Literal["compute_value"]] = None
    arithmetic_expression: Optional[str] = None

class GetWeatherReport(BaseModel):
    type: Optional[Literal["get_weather_report"]] = None
    location: Optional[str] = None

class Message(BaseModel):
    role: Optional[types.Role] = None
    content: Optional[str] = None
    timestamp: Optional[int] = None

class MessageToUser(BaseModel):
    type: Optional[Literal["message_to_user"]] = None
    message: StreamState[Optional[str]]

class Query(BaseModel):
    message: Optional[str] = None
    timestamp: Optional[int] = None

class Resume(BaseModel):
    type: Optional[Literal["resume"]] = None

class State(BaseModel):
    weather_report: Optional["WeatherReport"] = None
    recent_messages: List["Message"]

class WeatherReport(BaseModel):
    location: Optional[str] = None
    temperature: Optional[int] = None
    weather_status: Optional[str] = None
    timestamp: Optional[int] = None
